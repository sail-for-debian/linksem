(* Generated by Lem from abis/power64/abi_power64_elf_header.lem. *)

Require Import Arith.
Require Import Bool.
Require Import List.
Require Import String.
Require Import Program.Wf.

Require Import coqharness.

Open Scope nat_scope.
Open Scope string_scope.

(** [abi_power64_elf_header], Power64 ABI specific definitions related to the 
  * ELF file header.
  *)

Require Import lem_basic_classes.
Require Export lem_basic_classes.

Require Import lem_bool.
Require Export lem_bool.

Require Import lem_list.
Require Export lem_list.

Require Import lem_maybe.
Require Export lem_maybe.

Require Import missing_pervasives.
Require Export missing_pervasives.


Require Import elf_header.
Require Export elf_header.

Require Import elf_types_native_uint.
Require Export elf_types_native_uint.


Require Import endianness.
Require Export endianness.

(* [?]: removed value specification. *)

Definition is_valid_abi_power64_machine_architecture  (m : nat )  : bool :=  beq_nat
  m (id elf_ma_ppc64).
(* [?]: removed value specification. *)

Definition is_valid_abi_power64_magic_number  (magic : list (unsigned_char )) (endian : endianness )  : bool := 
  match ( lem_list.index magic (id elf_ii_class)) with 
    | None  => false
    | Some cls =>
      match ( lem_list.index magic (id elf_ii_data)) with 
        | None => false
        | Some ed =>
          match ( endian) with 
            | Little =>
                ( beq_nat(nat_of_unsigned_char cls) elf_class_64) &&
                  ( beq_nat(nat_of_unsigned_char ed) elf_data_2lsb)
            | Big    =>
                ( beq_nat(nat_of_unsigned_char cls) elf_class_64) &&
                  ( beq_nat(nat_of_unsigned_char ed) elf_data_2msb)
          end
      end
  end.

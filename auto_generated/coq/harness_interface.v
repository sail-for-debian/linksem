(* Generated by Lem from adaptors/harness_interface.lem. *)

Require Import Arith.
Require Import Bool.
Require Import List.
Require Import String.
Require Import Program.Wf.

Require Import coqharness.

Open Scope nat_scope.
Open Scope string_scope.

Require Import lem_basic_classes.
Require Export lem_basic_classes.

Require Import lem_bool.
Require Export lem_bool.

Require Import lem_function.
Require Export lem_function.

Require Import lem_maybe.
Require Export lem_maybe.

Require Import lem_num.
Require Export lem_num.

Require Import lem_string.
Require Export lem_string.


Require Import byte_sequence.
Require Export byte_sequence.

Require Import error.
Require Export error.

Require Import hex_printing.
Require Export hex_printing.

Require Import missing_pervasives.
Require Export missing_pervasives.

Require Import show.
Require Export show.


Require Import default_printing.
Require Export default_printing.


Require Import endianness.
Require Export endianness.

Require Import string_table.
Require Export string_table.


Require Import elf_dynamic.
Require Export elf_dynamic.

Require Import elf_file.
Require Export elf_file.

Require Import elf_header.
Require Export elf_header.

Require Import elf_program_header_table.
Require Export elf_program_header_table.

Require Import elf_relocation.
Require Export elf_relocation.

Require Import elf_section_header_table.
Require Export elf_section_header_table.

Require Import elf_symbol_table.
Require Export elf_symbol_table.

Require Import elf_types_native_uint.
Require Export elf_types_native_uint.


Require Import gnu_ext_dynamic.
Require Export gnu_ext_dynamic.

Require Import gnu_ext_section_header_table.
Require Export gnu_ext_section_header_table.

Require Import gnu_ext_section_to_segment_mapping.
Require Export gnu_ext_section_to_segment_mapping.

Require Import gnu_ext_symbol_versioning.
Require Export gnu_ext_symbol_versioning.

(* [?]: removed value specification. *)

Program Fixpoint concatS'  (ss : list (string )) (accum : string )  : string := 
  match ( ss) with 
    | []    => accum
    | s::ss => concatS' ss (String.append accum s)
  end.
(* [?]: removed value specification. *)

Definition concatS  (ss : list (string ))  : string :=  concatS' ss "".
(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)

(* [?]: removed value specification. *)


open import Basic_classes
open import Bool
open import Maybe
open import String

open import Elf_types_native_uint
open import Abi_cheri_mips64_elf_header
open import Elf_header
open import Missing_pervasives
open import Show

val header_is_cheri_mips64 : elf64_header -> bool
let header_is_cheri_mips64 h =
  is_valid_elf64_header h
    && List.index h.elf64_ident (unsafe_nat_of_natural elf_ii_data) = Just (unsigned_char_of_natural abi_cheri_mips64_data_encoding)
    && is_valid_abi_cheri_mips64_machine_architecture (natural_of_elf64_half h.elf64_machine)
    && is_valid_abi_cheri_mips64_magic_number h.elf64_ident
    && is_valid_abi_cheri256_mips64_flag (natural_of_elf64_word h.elf64_flags)

val header_is_pure_cheri_mips64 : elf64_header -> bool
let header_is_pure_cheri_mips64 h =
  header_is_cheri_mips64 h
    && is_pure_abi_cheri_mips64_flag (natural_of_elf64_word h.elf64_flags)
